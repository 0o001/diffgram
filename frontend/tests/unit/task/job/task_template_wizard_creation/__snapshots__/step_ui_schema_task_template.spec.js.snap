// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`step_name_task_template.vue Renders component correctly. 1`] = `
<v-container fluid="" data-cy="task-template-step-name">
  <h1 data-cy="wizard-title" class="font-weight-medium text--primary mb-8">
    <v-icon color="primary" size="48" class="mr-4">mdi-brush</v-icon>Task Template Creation
  </h1>
  <v_error_multiple error="[object Object]"></v_error_multiple>
  <p class="text--primary">
    The following steps will guide you on the creation of a new task template
  </p>
  <h4 data-cy="wizard-name-subtitle">Give a name to your Task Template: </h4>
  <v-text-field label="Name" data-cy="task-template-name-input"></v-text-field>
  <wizard_navigation></wizard_navigation>
</v-container>
`;

exports[`step_ui_schema_task_template.vue Renders component correctly. 1`] = `
<v-container fluid="" data-cy="task-template-ui-schema-step">
  <div class="d-flex mb-8 justify-space-between">
    <h1 data-cy="task-template-ui-schema-step-title" class="font-weight-medium text--primary mr-4">
      Select UI Schema:
    </h1>
    <tooltip_button tooltip_message="Manage UI Schema" button_color="primary" icon="mdi-cog" button_message=" Manage UI Schemas" color="white"></tooltip_button>
  </div>
  <v_error_multiple error="[object Object]"></v_error_multiple>
  <p class="text--primary">
    UI Schemas are a way to Customize the Annotation UI. You can show/hide buttons and configure
    what you want the annotators to see.
  </p>
  <v-container fluid="">
    <ui_schema_selector-stub show_default_option="true" data-cy="ui-schema-selector"></ui_schema_selector-stub>
  </v-container>
  <wizard_navigation></wizard_navigation>
</v-container>
`;
